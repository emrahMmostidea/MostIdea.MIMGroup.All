
@using System.Globalization
@using MostIdea.MIMGroup.Web.Areas.App.Models.Common.Modals
@using MostIdea.MIMGroup.Web.Areas.App.Models.WarehouseVsCouriers
@model CreateOrEditWarehouseVsCourierModalViewModel
@using Abp.Extensions
@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditWarehouseVsCourier")) : L("CreateNewWarehouseVsCourier")))

<div class="modal-body">
    <div id="WarehouseVsCourierInformationsTab">
        <form name="WarehouseVsCourierInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
            <input type="hidden" name="id" value="@Model.WarehouseVsCourier.Id" />
            }

            <div class="form-group">
                <label for="courierId">@L("User")</label>
                @Html.DropDownList("courierId", new SelectList(Model.WarehouseVsCourierUserList,"Id","DisplayName", (Model.IsEditMode ? Model.WarehouseVsCourier.CourierId.ToString() : "")),@L("SelectAUser"), new { @class = "form-control" , @required="required" })
            </div>

            <div class="form-group">
                <label for="warehouseId">@L("Warehouse")</label>
                @Html.DropDownList("warehouseId", new SelectList(Model.WarehouseVsCourierWarehouseList,"Id","DisplayName", (Model.IsEditMode ? Model.WarehouseVsCourier.WarehouseId.ToString() : "")),@L("SelectAWarehouse"), new { @class = "form-control" , @required="required" })
            </div>

        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")